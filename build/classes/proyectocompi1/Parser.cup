package proyectocompi1;
import java_cup.runtime.*;
import Node.Node;
import java.util.ArrayList;

terminal TK_START;
terminal TK_END;
terminal TK_VARIABLE_TIPO;
terminal TK_BOOLEAN;
terminal TK_BREAK;
terminal TK_CASE;
terminal TK_CHAR;
terminal TK_STRING;
terminal TK_FUNC;
terminal TK_ELSE;
terminal TK_FOR;
terminal TK_DEFAULT;
terminal TK_INT;
terminal TK_IF;
terminal TK_THEN;
terminal TK_SWITCH;
terminal TK_RETURN;
terminal TK_WHILE;
terminal TK_PRINT;
terminal TK_INPUT;
terminal TK_TRUE;
terminal TK_FALSE;
terminal TK_NULL;
terminal TK_LPAREN;
terminal TK_RPAREN;
terminal TK_LBRACE;
terminal TK_RBRACE;
terminal TK_LBRACK;
terminal TK_RBRACK;
terminal TK_SEMICOLON;
terminal TK_COMMA;
terminal TK_DOT;
terminal TK_ASIG;
terminal TK_OPLOG;
terminal TK_OPMAT;
terminal TK_OPREL;
terminal TK_PLUSPLUS;
terminal TK_MINUSMINUS;
terminal TK_ADDLESS;
terminal ID;
terminal ENDLINE;
terminal WHITESPACE;
terminal COMMENT_BEGIN;
terminal COMMENT_END;
terminal LETRA;
terminal DIGIT;
terminal INT;
terminal STRING;
terminal TK_ARRAY;
terminal CHAR;
terminal OR;
terminal AND;
terminal BOOLEAN;
terminal OPREL_NOT;



non terminal Node Start;
non terminal ArrayList<Node> Main;
non terminal Node Variables;
non terminal Node Valor;
non terminal Node Array;
non terminal Node ArrayContent;
non terminal ArrayList<Node> Content;
non terminal Node For;
non terminal Node Body;
non terminal Node While;
non terminal Node BoolExp;
non terminal Node BoolExp2;
non terminal Node BoolExp3;
non terminal Node AritExp;
non terminal Node MultiExp;
non terminal Node Exp;
non terminal Node ArrayE;
non terminal Node FunCall;
non terminal Node Sor;

Start::=TK_START Variables:vs Main:m TK_END
    {:

    :}
    |error Variables:vs Main:m TK_END
    |TK_START Variables:vs Main:m error
    ;


Variables::= TK_SEMICOLON TK_VARIABLE_TIPO:vt ID:id TK_ASIG Valor:v Variables:vs
    {:
    
    :}
    |TK_SEMICOLON Array:ar Variables:vs
    |error Valor:v Variables:vs
    |/*Vacio*/
    ;

Valor::= INT:i {::}
    |STRING:s {::}
    |CHAR:l {::}
    |TK_TRUE:t {::}
    |TK_FALSE:f {::}
    |ID:id {::}
    |error
    ;

Array::= TK_ARRAY:ar TK_DOT TK_VARIABLE_TIPO:vt TK_DOT INT:i ID:id TK_ASIG ArrayContent
    {:

    :}
    |error ArrayContent
    ;

ArrayContent::= TK_LBRACK Content:c TK_RBRACK
    {:

    :}
    |TK_LBRACK TK_RBRACK
    |error TK_RBRACK /**/
    ;

Content::= Valor:v TK_COMMA Content:c
    {:

    :}
    |Valor:v
    ;

For::= TK_FOR TK_LPAREN TK_INT ID:id1 TK_ASIG INT:i1 TK_SEMICOLON ID:id2 TK_OPLOG INT:i2 TK_SEMICOLON ID:id3 TK_ADDLESS:al TK_RPAREN Body:b
    {:
    
    :}
    |error Body:b
    ;

Body::= TK_START Main:m TK_END
    {:
    
    :}
    |error Main:m TK_END
    ;

While::= TK_WHILE TK_LPAREN BoolExp:be TK_RPAREN Body:b
    {:
    
    :}
    |error BoolExp:be TK_RPAREN Body:b
    ;

BoolExp::= BoolExp:be OR BoolExp2:be2
    {:
    
    :}
    |BoolExp2:be2
    {:
    
    :}
    ;

BoolExp2::= BoolExp2:be2 AND BoolExp3:be3
    {:
    
    :}
    |BoolExp3:be3
    {:
    
    :}
    ;

BoolExp3::= AritExp:ae TK_OPREL:op AritExp:ae2
    {::}
    |BOOLEAN:b
    {::}
    |TK_LPAREN BoolExp:be TK_RPAREN
    {::}
    |OPREL_NOT TK_LPAREN BoolExp:be TK_RPAREN
    {::}
    ;

AritExp::= AritExp:ae Sor:sor MultiExp:me /*non terminal SOR*/
    {::}
    |Exp:e
    {::}
    ;

MultiExp::= MultiExp:me TK_OPMAT Exp:e
    {::}
    |Exp:e
    {::}
    ;

Exp::= ID:id
    {::}
    |INT:i
    {::}
    |CHAR:c
    {::}
    |STRING:s
    {::}
    |FunCall:fc /*non terminal FunCall*/
    {::}
    |ArrayE:ae /*non terminal ArrayE*/
    {::}
    |TK_LPAREN AritExp:ae TK_RPAREN
    {::}
    ;

ArrayE::=
    {::}
    ;

FunCall::=
    {::}
    ;

Sor::=
    {::}
    ;